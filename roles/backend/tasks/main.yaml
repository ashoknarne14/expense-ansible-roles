  - name: disbale package
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable package
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install package
    ansible.builtin.package:
      name: "{{item}}"
      state: present
    loop:
      - nodejs
      - mysql

  - name: create expense user
    ansible.builtin.user:
      name: expense

    - name: import role
    ansible.builtin.import_role:
      name: common
      tasks_from: main

  # - name: create app directory
  #   ansible.builtin.file:
  #     path: /app
  #     state: directory

  # - name: download the backend code
  #   ansible.builtin.get_url:
  #     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
  #     dest: /tmp/backend.zip

  # - name: extract the file
  #   ansible.builtin.unarchive:
  #     src: /tmp/backend.zip
  #     dest: /app
  #     remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy backend service file
    ansible.builtin.template:
      src: backend.service.j2
      dest: /etc/systemd/system/backend.service
  
  - name: install pymysql module
    ansible.builtin.pip:
      name: "{{item}}"
      executable: pip
    loop:
      - PyMySQL
      - cryptography


  - name: create database
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{login_password}}"
      login_host: "{{login_host}}"
      state: import
      name: all
      target: /app/schema/backend.sql

  - name: daemon reload
    ansible.builtin.systemd_service:
      name: backend
      daemon_reload: true
      state: started
      enabled: true